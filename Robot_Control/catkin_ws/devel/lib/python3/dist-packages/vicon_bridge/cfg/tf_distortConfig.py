## *********************************************************
##
## File autogenerated for the vicon_bridge package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'tf_pub_rate', 'type': 'double', 'default': 100.0, 'level': 0, 'description': 'rate at which tf publishes transforms. ', 'min': 0.0, 'max': 250.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'tf_publish', 'type': 'bool', 'default': True, 'level': 0, 'description': 'determine if output will be published.', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'tf_ref_frame', 'type': 'str', 'default': 'world', 'level': 0, 'description': 'tf reference frame.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'tf_frame_in', 'type': 'str', 'default': 'in', 'level': 0, 'description': 'tf input frame.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'tf_frame_out', 'type': 'str', 'default': 'tf_distort/out', 'level': 0, 'description': 'tf output frame.', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'delay', 'type': 'int', 'default': 0, 'level': 0, 'description': 'delay [ms]. ', 'min': 0, 'max': 1000, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'position_scale', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'scale of the position measurement', 'min': 0.01, 'max': 10.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'noise_type', 'type': 'str', 'default': 'normal', 'level': 0, 'description': 'noise distribution. Standard deviation in case for normal, max. in case for uniform distribution. ', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'NORMAL', 'type': 'str', 'value': 'normal', 'srcline': 11, 'srcfile': '/home/frank/Documents/code/Landing_Robot_Control/vicon_frank2/catkin_ws/src/vicon_bridge/cfg/tf_distort.cfg', 'description': 'normal distributed noise.', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'UNIFORM', 'type': 'str', 'value': 'uniform', 'srcline': 12, 'srcfile': '/home/frank/Documents/code/Landing_Robot_Control/vicon_frank2/catkin_ws/src/vicon_bridge/cfg/tf_distort.cfg', 'description': 'uniform distributed noise.', 'ctype': 'std::string', 'cconsttype': 'const char * const'}], 'enum_description': 'An enum to set the noise distribution.'}", 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'sigma_roll_pitch', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'std dev for roll and pitch [deg]. ', 'min': 0.0, 'max': 2.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'sigma_yaw', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'std dev for yaw [deg]. ', 'min': 0.0, 'max': 2.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'sigma_xy', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'std dev for x/y [m]. ', 'min': 0.0, 'max': 1.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'sigma_z', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'std dev for z [m]. ', 'min': 0.0, 'max': 1.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'random_walk_k_xy', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'gain for random walk disturbance in x/y axis.', 'min': 0.0, 'max': 10.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'random_walk_k_z', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'gain for random walk disturbance in z axis.', 'min': 0.0, 'max': 10.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'random_walk_sigma_xy', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'std dev for gauss markov process in x/y axis [m].', 'min': 0.0, 'max': 20.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'random_walk_sigma_z', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'std dev for gauss markov process in x/y axis [m].', 'min': 0.0, 'max': 20.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'random_walk_tau_xy', 'type': 'double', 'default': 0.001, 'level': 0, 'description': 'time constant for gauss markov process in x/y axis [s].', 'min': 1.0, 'max': 3000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'random_walk_tau_z', 'type': 'double', 'default': 0.001, 'level': 0, 'description': 'time constant for gauss markov process in z axis [s].', 'min': 1.0, 'max': 3000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

tf_distort_NORMAL = 'normal'
tf_distort_UNIFORM = 'uniform'
